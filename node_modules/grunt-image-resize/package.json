{
  "name": "grunt-image-resize",
  "description": "Resizing images made easy.",
  "version": "0.2.0",
  "homepage": "https://github.com/excellenteasy/grunt-image-resize",
  "author": {
    "name": "David Pfahler",
    "email": "david@excellenteasy.com",
    "url": "http://excellenteasy.com"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/excellenteasy/grunt-image-resize"
  },
  "bugs": {
    "url": "https://github.com/excellenteasy/grunt-image-resize/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/excellenteasy/grunt-image-resize/blob/master/LICENSE-MIT"
    }
  ],
  "main": "Gruntfile.js",
  "engines": {
    "node": ">= 0.8.0"
  },
  "scripts": {
    "test": "grunt test"
  },
  "devDependencies": {
    "grunt-contrib-jshint": "~0.1.1",
    "grunt-contrib-clean": "~0.4.0",
    "grunt-contrib-nodeunit": "~0.1.2",
    "grunt": "~0.4.1"
  },
  "peerDependencies": {
    "grunt": "~0.4.1"
  },
  "keywords": [
    "gruntplugin"
  ],
  "dependencies": {
    "node-imagemagick": "~0.1.8",
    "async": "~0.2.8"
  },
  "readme": "# grunt-image-resize\n\n> Resizing images made easy - thanks to imagemagick.\n\n## Getting Started\nThis plugin requires Grunt `~0.4.1`\n\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\n\n```shell\nnpm install grunt-image-resize --save-dev\n```\n\nOne the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\n\n```js\ngrunt.loadNpmTasks('grunt-image-resize');\n```\n\n## The \"image_resize\" task\n\n### Overview\nIn your project's Gruntfile, add a section named `image_resize` to the data object passed into `grunt.initConfig()`.\n\n```js\ngrunt.initConfig({\n  image_resize: {\n    options: {\n      width: 100,\n      height: 100,\n      overwrite: true\n    },\n    your_target: {\n      // Target-specific file lists and/or options go here.\n    },\n  },\n})\n```\n\n### Options\n\n#### options.width\nType: `Number`\nDefault value: `0` (only if height is defined)\n\nA number value that is passed as pixel value to imagemagick.\n\n#### options.height\nType: `Number`\nDefault value: `0` (only if width is defined)\n\nA number value that is passed as pixel value to imagemagick.\n\n#### options.overwrite\nType: `Boolean`\nDefault value: `true`\n\nDetermines whether file that already exist under this destination will be overwritten.\n\n#### options.upscale\nType: `Boolean`\nDefault value: `false`\n\nDetermines whether images will be upscaled. If set to `false` (default), image will be copied instead of resized if it would be upscaled by resizing.\n\n### Usage Examples\n\n#### Default Options\nIn this example, the default options are used to resize an image to 100px width. So if the `test/fixtures/wikipedia.png` file has a width of 500px, the generated result would be a 100px wide `tmp/wikipedia.png`.\n\n```js\ngrunt.initConfig({\n  image_resize: {\n    resize: {\n      options: {\n        width: 100\n      },\n      files: {\n        'tmp/wikipedia.png': 'test/fixtures/wikipedia.png'\n      }\n    }\n  }\n})\n```\n\n#### Prevent overwriting\nIn this example, we prevent the destination file from being overwritten if it already exists. It the file `tmp/wikipedia.png` already exists, for example because we just ran the task configuration above, this would **not** overwrite `tmp/wikipedia.png`. The file `tmp/wikipedia.png` would still be 100px wide.\n\n```js\ngrunt.initConfig({\n  image_resize: {\n    no_overwrite: {\n      options: {\n        width: 50,\n        overwrite: false\n      },\n      files: {\n        'tmp/wikipedia.png': 'test/fixtures/wikipedia.png'\n      }\n    }\n  }\n})\n```\n\n#### Allow upscaling\nBy default, the task does not resize images which would be upscaled. It only allows downscaling. You can allow upscaling by setting the `upscale` option to `true`. Otherwise images will copied instead of resized when they would be upscaled by resizing.\n\n```js\ngrunt.initConfig({\n  image_resize: {\n    no_overwrite: {\n      options: {\n        width: 600,\n        upscale: true\n      },\n      files: {\n        'tmp/wikipedia.png': 'test/fixtures/wikipedia.png'\n      }\n    }\n  }\n})\n```\n\n## Contributing\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [Grunt](http://gruntjs.com/).\n\n## Release History\nInitial release\n",
  "readmeFilename": "README.md",
  "_id": "grunt-image-resize@0.2.0",
  "_from": "grunt-image-resize@~0.2.0"
}
